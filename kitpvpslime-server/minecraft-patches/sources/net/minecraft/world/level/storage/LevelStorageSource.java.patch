--- a/net/minecraft/world/level/storage/LevelStorageSource.java
+++ b/net/minecraft/world/level/storage/LevelStorageSource.java
@@ -352,10 +_,16 @@
         }
     }
 
+    // kitpvp start - doNotCreateLockFile
     public LevelStorageSource.LevelStorageAccess createAccess(String saveName, ResourceKey<LevelStem> dimensionType) throws IOException { // CraftBukkit
+        return createAccess(saveName, dimensionType, false);
+    }
+
+    public LevelStorageSource.LevelStorageAccess createAccess(String saveName, ResourceKey<LevelStem> dimensionType, final boolean doNotCreateLockFile) throws IOException { // CraftBukkit
         Path levelPath = this.getLevelPath(saveName);
-        return new LevelStorageSource.LevelStorageAccess(saveName, levelPath, dimensionType); // CraftBukkit
+        return new LevelStorageSource.LevelStorageAccess(saveName, levelPath, dimensionType, doNotCreateLockFile); // CraftBukkit
     }
+    // kitpvp end - doNotCreateLockFile
 
     public DirectoryValidator getWorldDirValidator() {
         return this.worldDirValidator;
@@ -428,12 +_,18 @@
         // CraftBukkit start
         public final ResourceKey<LevelStem> dimensionType;
 
+        // kitpvp start - doNotCreateLockFile
         LevelStorageAccess(final String levelId, final Path levelDir, final ResourceKey<LevelStem> dimensionType) throws IOException {
+            this(levelId, levelDir, dimensionType, false);
+        }
+
+        LevelStorageAccess(final String levelId, final Path levelDir, final ResourceKey<LevelStem> dimensionType, final boolean doNotCreateLockFile) throws IOException {
             this.dimensionType = dimensionType;
             // CraftBukkit end
             this.levelId = levelId;
             this.levelDirectory = new LevelStorageSource.LevelDirectory(levelDir);
-            this.lock = DirectoryLock.create(levelDir);
+            this.lock = world.kitpvp.slime.SlimeDirectoryLock.create(levelDir);
+            // kitpvp end - doNotCreateLockFile
         }
 
         public long estimateDiskSpace() {
