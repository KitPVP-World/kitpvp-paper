From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: notstevy <notstevy@ultrabuildmc.de>
Date: Sun, 6 Apr 2025 11:43:31 +0200
Subject: [PATCH] Display Player


diff --git a/net/minecraft/network/syncher/SynchedEntityData.java b/net/minecraft/network/syncher/SynchedEntityData.java
index f1ab0e66e7d464f7f31a7a360528ed97cdda0aa0..e6e542fdf673724f767885b03146c25358e3c756 100644
--- a/net/minecraft/network/syncher/SynchedEntityData.java
+++ b/net/minecraft/network/syncher/SynchedEntityData.java
@@ -37,6 +37,19 @@ public class SynchedEntityData {
             }
         }
 
+        // kitpvp start
+        if(clazz == world.kitpvp.slime.entity.DisplayPlayer.class)
+            throw new RuntimeException("Cannot register a SynchedEntityData for the 'world.kitpvp.slime.entity.DisplayPlayer'! It must be synchronous with the 'net.minecraft.world.entity.player.Player'");
+        if(clazz == net.minecraft.world.entity.player.Player.class) {
+            var displayPlayerLastId = ID_REGISTRY.getLastIdFor(world.kitpvp.slime.entity.DisplayPlayer.class);
+            var playerLastId = ID_REGISTRY.getLastIdFor(net.minecraft.world.entity.player.Player.class);
+            if(displayPlayerLastId != playerLastId)
+                throw new RuntimeException("'world.kitpvp.slime.entity.DisplayPlayer' ("+ displayPlayerLastId + ") is not in sync with the 'net.minecraft.world.entity.player.Player' (" + playerLastId + ")");
+
+            ID_REGISTRY.define(world.kitpvp.slime.entity.DisplayPlayer.class);
+        }
+        // kitpvp end
+
         int i = ID_REGISTRY.define(clazz);
         if (i > 254) {
             throw new IllegalArgumentException("Data value id is too big with " + i + "! (Max is 254)");
diff --git a/net/minecraft/server/level/ServerEntity.java b/net/minecraft/server/level/ServerEntity.java
index e96d4dee14c05f2fa329bfb1588ec795d4e3d730..b1db40c917b2a69a83c487765a52db748a8feab2 100644
--- a/net/minecraft/server/level/ServerEntity.java
+++ b/net/minecraft/server/level/ServerEntity.java
@@ -339,6 +339,17 @@ public class ServerEntity {
             // CraftBukkit end
         }
 
+        // kitpvp start - DisplayPlayer
+        if(this.entity instanceof world.kitpvp.slime.entity.DisplayPlayer displayPlayer) {
+            consumer.accept(
+                new net.minecraft.network.protocol.game.ClientboundPlayerInfoUpdatePacket(
+                    java.util.EnumSet.of(net.minecraft.network.protocol.game.ClientboundPlayerInfoUpdatePacket.Action.ADD_PLAYER),
+                    displayPlayer.getInfoUpdateEntry(player)
+                )
+            );
+        }
+        // kitpvp end - DisplayPlayer
+
         Packet<ClientGamePacketListener> addEntityPacket = this.entity.getAddEntityPacket(this);
         consumer.accept(addEntityPacket);
         if (this.trackedDataValues != null) {
diff --git a/net/minecraft/world/entity/EntityType.java b/net/minecraft/world/entity/EntityType.java
index cdf71340278e05e58bbb4ed51a432336de46e549..1f8ad2b72f300b51ed6f0788372d4a41b05816dc 100644
--- a/net/minecraft/world/entity/EntityType.java
+++ b/net/minecraft/world/entity/EntityType.java
@@ -1065,6 +1065,18 @@ public class EntityType<T extends Entity> implements FeatureElement, EntityTypeT
             .clientTrackingRange(32)
             .updateInterval(2)
     );
+    // kitpvp start - DisplayPlayer
+    public static final EntityType<world.kitpvp.slime.entity.DisplayPlayer> DISPLAY_PLAYER = register(
+        ResourceKey.create(Registries.ENTITY_TYPE, ResourceLocation.fromNamespaceAndPath("kitpvp", "display_player")),
+        EntityType.Builder.<world.kitpvp.slime.entity.DisplayPlayer>of(world.kitpvp.slime.entity.DisplayPlayer::new, MobCategory.MISC)
+            .noSave()
+            .sized(0.6F, 1.8F)
+            .eyeHeight(1.62F)
+            .vehicleAttachment(Player.DEFAULT_VEHICLE_ATTACHMENT)
+            .clientTrackingRange(32)
+            .updateInterval(2)
+    );
+    // kitpvp end - DisplayPlayer
     public static final EntityType<FishingHook> FISHING_BOBBER = register(
         "fishing_bobber",
         EntityType.Builder.<FishingHook>of(FishingHook::new, MobCategory.MISC)
diff --git a/net/minecraft/world/entity/LivingEntity.java b/net/minecraft/world/entity/LivingEntity.java
index 769950296fd54787160a621b1230349b5eed681b..a6dd035c2b99a596611b38f2628dbcd5c3201b15 100644
--- a/net/minecraft/world/entity/LivingEntity.java
+++ b/net/minecraft/world/entity/LivingEntity.java
@@ -2729,6 +2729,13 @@ public abstract class LivingEntity extends Entity implements Attackable, Waypoin
         return this.attributes;
     }
 
+    // kitpvp start - DisplayPlayer
+    public void setAttributes(AttributeMap attributeMap) {
+        this.attributes = attributeMap;
+        this.craftAttributes = new org.bukkit.craftbukkit.attribute.CraftAttributeMap(this.attributes);
+    }
+    // kitpvp end - DisplayPlayer
+
     public ItemStack getMainHandItem() {
         return this.getItemBySlot(EquipmentSlot.MAINHAND);
     }
diff --git a/net/minecraft/world/entity/ai/attributes/DefaultAttributes.java b/net/minecraft/world/entity/ai/attributes/DefaultAttributes.java
index 26ffe98c94b2aaf61bf1693e86e8e7962e892a09..d0db3634373eb1c36fd05c8c373c292bd93b36c0 100644
--- a/net/minecraft/world/entity/ai/attributes/DefaultAttributes.java
+++ b/net/minecraft/world/entity/ai/attributes/DefaultAttributes.java
@@ -139,6 +139,7 @@ public class DefaultAttributes {
         .put(EntityType.PIGLIN_BRUTE, PiglinBrute.createAttributes().build())
         .put(EntityType.PILLAGER, Pillager.createAttributes().build())
         .put(EntityType.PLAYER, Player.createAttributes().build())
+        .put(EntityType.DISPLAY_PLAYER, world.kitpvp.slime.entity.DisplayPlayer.createAttributes().build()) // kitpvp
         .put(EntityType.POLAR_BEAR, PolarBear.createAttributes().build())
         .put(EntityType.PUFFERFISH, AbstractFish.createAttributes().build())
         .put(EntityType.RABBIT, Rabbit.createAttributes().build())
