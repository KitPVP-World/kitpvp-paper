From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: notstevy <notstevy@ultrabuildmc.de>
Date: Sun, 19 Oct 2025 13:38:46 +0200
Subject: [PATCH] Bad Respawn Point Causing Entity

Signed-off-by: notstevy <notstevy@ultrabuildmc.de>

diff --git a/net/minecraft/world/damagesource/DamageSources.java b/net/minecraft/world/damagesource/DamageSources.java
index cc206ecff2d95f0398ca424c178a336ad80cc396..c0f6224a742b6ef8837c69f5f38de1f63e75e7d3 100644
--- a/net/minecraft/world/damagesource/DamageSources.java
+++ b/net/minecraft/world/damagesource/DamageSources.java
@@ -260,8 +260,10 @@ public class DamageSources {
         return this.source(DamageTypes.SONIC_BOOM, entity);
     }
 
-    public DamageSource badRespawnPointExplosion(Vec3 position) {
-        return new DamageSource(this.damageTypes.getOrThrow(DamageTypes.BAD_RESPAWN_POINT), position);
+    // kitpvp start - Bad Respawn Point Causing Entity
+    public DamageSource badRespawnPointExplosion(Vec3 position, @Nullable Entity causingEntity) {
+        return new DamageSource(this.damageTypes.getOrThrow(DamageTypes.BAD_RESPAWN_POINT), null, causingEntity, position);
+        // kitpvp end - Bad Respawn Point Causing Entity
     }
 
     public DamageSource outOfBorder() {
diff --git a/net/minecraft/world/level/block/BedBlock.java b/net/minecraft/world/level/block/BedBlock.java
index e72ead9ff6541f821a61ad3c50fe068a8c8bb69d..f5e071c3f6f4771fef064035ab478dc8238998e0 100644
--- a/net/minecraft/world/level/block/BedBlock.java
+++ b/net/minecraft/world/level/block/BedBlock.java
@@ -98,10 +98,10 @@ public class BedBlock extends HorizontalDirectionalBlock implements EntityBlock
                 }
 
                 Vec3 center = pos.getCenter();
-                level.explode(null, level.damageSources().badRespawnPointExplosion(center), null, center, 5.0F, true, Level.ExplosionInteraction.BLOCK);
+                level.explode(null, level.damageSources().badRespawnPointExplosion(center, player), null, center, 5.0F, true, Level.ExplosionInteraction.BLOCK); // kitpvp - Bad Respawn Point Causing Entity
                 return InteractionResult.SUCCESS_SERVER;
             } else if (state.getValue(OCCUPIED)) {
-                if (!BedBlock.canSetSpawn(level)) return this.explodeBed(state, level, pos); // Paper - check explode first
+                if (!BedBlock.canSetSpawn(level)) return this.explodeBed(state, level, pos, player); // Paper - check explode first // kitpvp - Bad Respawn Point Causing Entity
                 if (!this.kickVillagerOutOfBed(level, pos)) {
                     player.displayClientMessage(Component.translatable("block.minecraft.bed.occupied"), true);
                 }
@@ -122,7 +122,7 @@ public class BedBlock extends HorizontalDirectionalBlock implements EntityBlock
                         // Paper end - PlayerBedFailEnterEvent
                     // CraftBukkit start - handling bed explosion from below here
                     if (event.getWillExplode()) { // Paper - PlayerBedFailEnterEvent
-                        this.explodeBed(finalBlockState, level, finalBlockPos);
+                        this.explodeBed(finalBlockState, level, finalBlockPos, player); // kitpvp - Bad Respawn Point Causing Entity
                     } else
                     // CraftBukkit end
                     if (bedSleepingProblem.getMessage() != null) {
@@ -137,7 +137,7 @@ public class BedBlock extends HorizontalDirectionalBlock implements EntityBlock
     }
 
     // CraftBukkit start - Copied from the above method
-    private InteractionResult explodeBed(BlockState state, Level level, BlockPos pos) {
+    private InteractionResult explodeBed(BlockState state, Level level, BlockPos pos, @Nullable Entity causingEntity) { // kitpvp - Bad Respawn Point Causing Entity
         org.bukkit.block.BlockState blockState = org.bukkit.craftbukkit.block.CraftBlock.at(level, pos).getState(); // CraftBukkit - capture BlockState before remove block
         level.removeBlock(pos, false);
         BlockPos blockPos = pos.relative(state.getValue(FACING).getOpposite());
@@ -146,7 +146,7 @@ public class BedBlock extends HorizontalDirectionalBlock implements EntityBlock
         }
 
         Vec3 center = pos.getCenter();
-        level.explode(null, level.damageSources().badRespawnPointExplosion(center).causingBlockSnapshot(blockState), null, center, 5.0F, true, Level.ExplosionInteraction.BLOCK); // CraftBukkit - add state
+        level.explode(null, level.damageSources().badRespawnPointExplosion(center, causingEntity).causingBlockSnapshot(blockState), null, center, 5.0F, true, Level.ExplosionInteraction.BLOCK); // CraftBukkit - add state // kitpvp - Bad Respawn Point Causing Entity
         return InteractionResult.SUCCESS_SERVER;
      }
     // CraftBukkit end
diff --git a/net/minecraft/world/level/block/RespawnAnchorBlock.java b/net/minecraft/world/level/block/RespawnAnchorBlock.java
index 5b9d67d671ea70d4a8920a7f190d240c920971ac..059826173f1c0f65232a26b96b9bc9f9d4996584 100644
--- a/net/minecraft/world/level/block/RespawnAnchorBlock.java
+++ b/net/minecraft/world/level/block/RespawnAnchorBlock.java
@@ -94,7 +94,7 @@ public class RespawnAnchorBlock extends Block {
             return InteractionResult.PASS;
         } else if (!canSetSpawn(level)) {
             if (!level.isClientSide) {
-                this.explode(state, level, pos);
+                this.explode(state, level, pos, player); // kitpvp - Bad Respawn Point Causing Entity
             }
 
             return InteractionResult.SUCCESS;
@@ -145,7 +145,7 @@ public class RespawnAnchorBlock extends Block {
         }
     }
 
-    private void explode(BlockState state, Level level, final BlockPos pos2) {
+    private void explode(BlockState state, Level level, final BlockPos pos2, final @Nullable Entity causingEntity) { // kitpvp - Bad Respawn Point Causing Entity
         org.bukkit.block.BlockState blockState = org.bukkit.craftbukkit.block.CraftBlock.at(level, pos2).getState(); // CraftBukkit - capture BlockState before remove block
         level.removeBlock(pos2, false);
         boolean flag = Direction.Plane.HORIZONTAL.stream().map(pos2::relative).anyMatch(pos -> isWaterThatWouldFlow(pos, level));
@@ -160,7 +160,7 @@ public class RespawnAnchorBlock extends Block {
         };
         Vec3 center = pos2.getCenter();
         level.explode(
-            null, level.damageSources().badRespawnPointExplosion(center).causingBlockSnapshot(blockState), explosionDamageCalculator, center, 5.0F, true, Level.ExplosionInteraction.BLOCK // CraftBukkit - add state
+            null, level.damageSources().badRespawnPointExplosion(center, causingEntity).causingBlockSnapshot(blockState), explosionDamageCalculator, center, 5.0F, true, Level.ExplosionInteraction.BLOCK // CraftBukkit - add state // kitpvp - Bad Respawn Point Causing Entity
         );
     }
 
